using AlonSudoku.Board;
using AlonSudoku.Exceptions;
using AlonSudoku.Solvers;
using AlonSudoku.Validation;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace AlonSudokuTests.SolveableBoards
{
    [TestClass]
    public sealed class SolveableBigSudokus
    {
        [TestMethod]
        public void Big_Sudoko1()
        {
            string validSudokuInput
            SudokuBoard board = new SudokuBoard(validSudokuInput);
            SolverController solver = new SolverController(board);

            bool result = solver.Solve();

            Assert.IsTrue(result);
        }

        [TestMethod]
        public void Big_Sudoko2()
        {
            string validSudokuInput

            SudokuBoard board = new SudokuBoard(validSudokuInput);
            SolverController solver = new SolverController(board);

            bool result = solver.Solve();

            Assert.IsTrue(result);
        }

        [TestMethod]
        public void Big_Sudoko3()
        {
            string validSudokuInput

            SudokuBoard board = new SudokuBoard(validSudokuInput);
            SolverController solver = new SolverController(board);

            bool result = solver.Solve();

            Assert.IsTrue(result);
        }


    }
}
